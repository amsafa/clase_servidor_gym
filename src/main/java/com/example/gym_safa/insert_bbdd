-- Elimina las tablas si ya existen
DROP TABLE IF EXISTS usuario;
DROP TABLE IF EXISTS pago;
DROP TABLE IF EXISTS vencimiento;
DROP TABLE IF EXISTS asistencia;
DROP TABLE IF EXISTS socio;
DROP TABLE IF EXISTS membresia;

-- Crear tabla membresía
CREATE TABLE membresia (
    membresia_id SERIAL PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    duracion_meses INT NOT NULL,
    precio FLOAT NOT NULL
);

-- Crear tabla socio
CREATE TABLE socio (
    socio_id SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    DNI VARCHAR(100) UNIQUE,
    fecha_nacimiento DATE NOT NULL,
    cuenta_bancaria INT UNIQUE,
    telefono VARCHAR(15),
    correo VARCHAR(100) UNIQUE,
    membresia_id INT,
    fecha_registro DATE NOT NULL,
    CONSTRAINT fk_membresia FOREIGN KEY (membresia_id) REFERENCES membresia(membresia_id)
    ON DELETE SET NULL
);

-- Crear tabla asistencia
CREATE TABLE asistencia (
    asistencia_id SERIAL PRIMARY KEY,
    socio_id INT NOT NULL,
    fecha_entrada TIMESTAMP NOT NULL,
    fecha_salida TIMESTAMP NOT NULL,
    CONSTRAINT fk_socio_asistencia FOREIGN KEY (socio_id) REFERENCES socio(socio_id)
    ON DELETE CASCADE
);

-- Crear tabla vencimiento
CREATE TABLE vencimiento (
    vencimiento_id SERIAL PRIMARY KEY,
    socio_id INT NOT NULL,
    fecha_i DATE NOT NULL,
    fecha_f DATE NOT NULL,
    estado INT,
    CONSTRAINT fk_socio_vencimiento FOREIGN KEY (socio_id) REFERENCES socio(socio_id)
    ON DELETE CASCADE
);

-- Crear tabla pago
CREATE TABLE pago (
    pago_id SERIAL PRIMARY KEY,
    socio_id INT NOT NULL,
    monto FLOAT NOT NULL,
    fecha_pago DATE NOT NULL,
    tipo_pago INT,
    CONSTRAINT fk_socio_pago FOREIGN KEY (socio_id) REFERENCES socio(socio_id)
    ON DELETE CASCADE
);

-- Crear tabla usuario
CREATE TABLE usuario (
    admin_id SERIAL PRIMARY KEY,
    socio_id INT NOT NULL,
    clave VARCHAR(255) NOT NULL,
    rol INT,
    CONSTRAINT fk_socio_usuarios FOREIGN KEY (socio_id) REFERENCES socio(socio_id)
    ON DELETE CASCADE
);




select * from pago p ;
select * from usuario u ;
select * from vencimiento v ;
select * from asistencia a ;
select * from membresia m ;
select * from socio s ;


-- Insertar datos en la tabla membresía
INSERT INTO membresia (nombre, duracion_meses, precio)
VALUES
('Basico', 3, 35.00),
('Intermedio', 6, 65.00),
('Invencible', 12, 120.50);

-- Insertar datos en la tabla socio
INSERT INTO socio (nombre, DNI, fecha_nacimiento, cuenta_bancaria, telefono, correo, membresia_id, fecha_registro)
VALUES
('Juan Pérez', '12345678', '1990-05-10', 123456789, '555-1234', 'juan.perez@email.com', 1, '2023-01-15'),
('María López', '87654321', '1985-10-22', 987654321, '555-5678', 'maria.lopez@email.com', 2, '2023-03-10'),
('Carlos Gómez', '45678912', '1995-07-14', 112233445, '555-7890', 'carlos.gomez@email.com', 3, '2023-04-20');

-- Insertar datos en la tabla asistencia
INSERT INTO asistencia (socio_id, fecha_entrada, fecha_salida) VALUES (1, '2023-10-01 08:00:00', '2023-10-01 10:00:00');
INSERT INTO asistencia (socio_id, fecha_entrada, fecha_salida) VALUES (1, '2023-10-02 09:00:00', '2023-10-02 11:30:00');
INSERT INTO asistencia (socio_id, fecha_entrada, fecha_salida) VALUES (2, '2023-10-01 07:30:00', '2023-10-01 09:00:00');

-- Insertar datos en la tabla vencimiento
INSERT INTO vencimiento (socio_id, fecha_i, fecha_f, estado)
VALUES
(1, '2023-01-15', '2024-01-15', 1),
(2, '2023-03-10', '2023-09-10', 1),
(3, '2023-04-20', '2023-07-20', 0);

-- Insertar datos en la tabla pago
INSERT INTO pago (socio_id, monto, fecha_pago, tipo_pago)
VALUES
(1, 120.50, '2023-01-15', 1),
(2, 65.00, '2023-03-10', 2),
(3, 35.00, '2023-04-20', 1);

-- Insertar datos en la tabla usuario
INSERT INTO usuario (socio_id, clave, rol)
VALUES
(1, 'adminpass123', 1),
(2, 'sociopass456', 2),
(3, 'sociopass789', 2);



